pipeline{
    agent any
    tools {
        terraform 'terraform'
    }
    
    stages {
        stage('Build Infrastructure') {
            steps {
                git branch: 'main', credentialsId: 'github-ssh-key', url: 'git@github.com:unicum0212/petclinic-devops-deploy.git'
                dir('terraform/env_1'){
                    sh 'terraform init -upgrade'
                    sh 'terraform apply -auto-approve -no-color'
                }
            }
        }
        stage('Build image') {
            steps {
                sh 'docker build -t flawwwless/dynamic-inventory-ansible:latest .'
            }
        }
        stage('Push Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
                    sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
                    sh 'docker push flawwwless/dynamic-inventory-ansible:latest'
                }
            }
        }
        stage('Pull Ansible Roles') {
            steps {
                git branch: 'main', credentialsId: 'github-key', url: 'git@github.com:unicum0212/ansible-roles-petclinic.git'
            }
        }
        stage('Pull repository and Start Tests') {
            agent {
                docker {
                    image 'flawwwless/dynamic-inventory-ansible:latest'
                    args '-u root -v /home/ubuntu/ansible/:/ansible/ -v /home/ubuntu/ansible/ansible.cfg:/etc/ansible/ansible.cfg -v /var/lib/docker/volumes/jenkins_home/_data/workspace/${JOB_NAME}/:/ansible/playbooks'
                }
            }
            steps {
                sh 'ansible-playbook /ansible/playbooks/tests-petclinic.yml'
            }
        }
        stage('Deploy App on Clean Server') {
            agent {
                docker {
                    image 'flawwwless/dynamic-inventory-ansible:latest'
                    args '-u root -v /home/ubuntu/ansible:/ansible/ -v /home/ubuntu/ansible/ansible.cfg:/etc/ansible/ansible.cfg -v /var/lib/docker/volumes/jenkins_home/_data/workspace/${JOB_NAME}/:/ansible/playbooks'
                }
            }
            steps {
                sh 'ansible-playbook /ansible/playbooks/deploy-petclinic.yml'
            }
        }
        stage('Change Status of Server') {
            steps {
                dir('terraform/env_1'){
                    sh 'terraform apply -var="status=Deployed" -auto-approve -no-color'
                }
                
            }
        }
    }
}
